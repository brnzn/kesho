Sally Crompton
password

need to create user for local host full access

create database kesho;
grant all privileges on kesho.* to admin@localhost;



create table STUDENTS (
  ID bigint primary key AUTO_INCREMENT,
  FIRST_NAME varchar(20),
  SURNAME varchar(20),
  GENDER varchar(10),
  PARENTS TINYINT,
  DEPARTED BIT,
  SPONSORSHIP_TYPE varchar(20),
  REASON varchar(50),
  EDUCATION_END_DATE DATE, 
  SPONSORSHIP_END_DATE DATE, 
  EXCESS_SPONSORSHIP TINYINT
)

create table SCHOOLS (
  ID bigint primary key AUTO_INCREMENT,
  NAME varchar(50),
  UNIQUE KEY unique_school_name (NAME)
)

create table EDUCATION_HISTORY (
  ID bigint primary key AUTO_INCREMENT,
  STUDENT_ID bigint,
  SCHOOL_ID bigint,
  LEVEL varchar(20),
  CLASS varchar(30),
  START_DATE DATE,
  TERM TINYINT,
  PREDICTED_END_DATE DATE,
	foreign key EDUCATION_HISTORY_STUDENTS_FK (STUDENT_ID) REFERENCES STUDENTS(ID),  
	foreign key EDUCATION_HISTORY_SCHOOL_FK (SCHOOL_ID) REFERENCES SCHOOLS(ID)  
)

create table STUDENT_LOG (
  ID bigint primary key AUTO_INCREMENT,
  CREATED_DATE TIMESTAMP NOT NULL DEFAULT now(),
  STUDENT_ID bigint,
  LOG varchar(250),
	foreign key STUDENT_LOG_STUDENTS_FK (STUDENT_ID) REFERENCES STUDENTS(ID)
)

create table CURRENCY (
  ID bigint primary key AUTO_INCREMENT,
  CURRENCY varchar(20),
  UNIQUE KEY unique_currency (CURRENCY)
)

create table ACCOUNT(
  ID bigint primary key AUTO_INCREMENT,
  ACCOUNT_NAME varchar(20),
  UNIQUE KEY unique_account (ACCOUNT_NAME)
)

create table PAYMENT_METHOD (
  ID bigint primary key AUTO_INCREMENT,
  PAYMENT_METHOD varchar(20),
  UNIQUE KEY unique_payment_method (PAYMENT_METHOD)
)


do we have more than one contact details and address 
create table SPONSORS (
  ID bigint primary key AUTO_INCREMENT,
  TITLE varchar(10),
  FIRST_NAME varchar(20),
  SURNAME varchar(20),
  ADDRESS_LINE_1 varchar(50),
  ADDRESS_LINE_2 varchar(50),
  ADDRESS_LINE_3 varchar(50),
  COUNTY varchar(20),
  POSTCODE varchar(10),
	COUNTRY varchar(20),
	PHONE varchar(20),
	EMAIL varchar(100),
	GIFT_AID BIT DEFAULT 0,
	CURRENCY_ID bigint,
	ACCOUNT_ID bigint,
	PAYMENT_METHOD_ID bigint,
	foreign key SPONSORS_CURRENCY_FK (CURRENCY_ID) REFERENCES CURRENCY(ID),  
	foreign key SPONSORS_ACCOUNT_FK (ACCOUNT_ID) REFERENCES ACCOUNT(ID),  
	foreign key SPONSORS_PAYMENT_METHOD_FK (PAYMENT_METHOD_ID) REFERENCES PAYMENT_METHOD(ID)
)

create table SPONSOR_LOG (
  ID bigint primary key AUTO_INCREMENT,
  CREATED_DATE TIMESTAMP NOT NULL DEFAULT now(),
  SPONSOR_ID bigint,
  LOG varchar(250),
	foreign key STUDENT_LOG_SPONSORS_FK (SPONSOR_ID) REFERENCES SPONSORS(ID)
)

create table SPONSOR_COMMITMENTS (
  ID bigint primary key AUTO_INCREMENT,
  SPONSOR_ID bigint,
  STUDENT_ID bigint,
  START_DATE DATE,
  END_DATE DATE,
	foreign key SPONSOR_COMMITMENTS_SPONSOR_FK (SPONSOR_ID) REFERENCES SPONSORS(ID),
	foreign key SPONSOR_COMMITMENTS_STUDENTS_FK (STUDENT_ID) REFERENCES STUDENTS(ID),
  UNIQUE KEY unique_SPONSOR_COMMITMENT_STUDENT (SPONSOR_ID,STUDENT_ID)
)

create table PAYMENT_ARRANGEMENTS (
  ID bigint primary key AUTO_INCREMENT,
  SPONSOR_ID bigint,
  START_DATE DATE,
  END_DATE DATE,
  FREQUENCY varchar(20),
  AMOUNT decimal(19,6),
	CURRENCY_ID bigint,
	foreign key PAYMENT_ARRANGEMENTS_SPONSOR_FK (SPONSOR_ID) REFERENCES SPONSORS(ID),
	foreign key PAYMENT_ARRANGEMENTS_CURRENCY_FK (CURRENCY_ID) REFERENCES CURRENCY(ID)  
)

create table TRANSACTIONS (
  ID bigint primary key AUTO_INCREMENT,
  SPONSOR_ID bigint,
  DATE DATE,
  TYPE varchar(20),
	ACCOUNT_ID bigint,
  REFERENCE varchar(100),
  CATEGORY varchar(30),
  AMOUNT decimal(19,6),
  YEAR bigint(4),
	PAYMENT_METHOD_ID bigint,
  	CURRENCY_ID bigint,
  RECONCILED BIT DEFAULT 0, 
	foreign key TRANSACTIONS_SPONSOR_FK (SPONSOR_ID) REFERENCES SPONSORS(ID),
	foreign key TRANSACTIONS_ACCOUNT_FK (ACCOUNT_ID) REFERENCES ACCOUNT(ID),  
	foreign key TRANSACTIONS_PAYMENT_METHOD_FK (PAYMENT_METHOD_ID) REFERENCES PAYMENT_METHOD(ID)
)



